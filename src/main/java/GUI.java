
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.DecimalFormat;
import java.util.*;
import javax.swing.JLabel;

public class GUI extends javax.swing.JFrame {

    private DBManager dbmanager;
    private static DecimalFormat df = new DecimalFormat("0.00");

    /**
     * Creates new form GUI
     */
    public GUI(DBManager dbm) {
        initComponents();
        this.dbmanager = dbm;

        tarjousIkkuna.pack();
        laskuErittelyIkkuna.pack();
        urakkaErittelyIkkuna.pack();
        lahetaMuistutuslaskut.setEnabled(false);
        laskuMaksettu.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tarjousIkkuna = new javax.swing.JFrame();
        popupok = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        yhteenvetoTunnit = new javax.swing.JTable();
        jScrollPane11 = new javax.swing.JScrollPane();
        yhteenvetoTarvikkeet = new javax.swing.JTable();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jSeparator8 = new javax.swing.JSeparator();
        tarjousLabel = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        tarjousKohdeosoite = new javax.swing.JLabel();
        tarjousAsiakas = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        tarjousKohdeEralkm = new javax.swing.JLabel();
        laskuErittelyIkkuna = new javax.swing.JFrame();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane13 = new javax.swing.JScrollPane();
        laskuErittelyTunnit = new javax.swing.JTable();
        jScrollPane14 = new javax.swing.JScrollPane();
        laskuErittelyTarvikkeet = new javax.swing.JTable();
        laskuErittelyOk = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        laskuLuontipvm = new javax.swing.JLabel();
        tyokohdeTyyppi = new javax.swing.JLabel();
        tyokohdeOsoite = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        laskuAsiakas = new javax.swing.JLabel();
        laskuErapvm = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        laskuPerintakulu = new javax.swing.JLabel();
        laskuViivastyskorko = new javax.swing.JLabel();
        laskuTotal = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        maksueraTuntilaskuOtsikko = new javax.swing.JLabel();
        laskuEralkm = new javax.swing.JLabel();
        laskunNumeroTuntilasku = new javax.swing.JLabel();
        tuntilaskuKorvaava = new javax.swing.JLabel();
        urakkaErittelyIkkuna = new javax.swing.JFrame();
        jLabel58 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        urakkaLaskuTunnit = new javax.swing.JTable();
        jScrollPane16 = new javax.swing.JScrollPane();
        urakkaLaskuTarvikkeet = new javax.swing.JTable();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator7 = new javax.swing.JSeparator();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        urakkaLaskunumero = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jSeparator10 = new javax.swing.JSeparator();
        jLabel103 = new javax.swing.JLabel();
        urakkaLaskuEralkm = new javax.swing.JLabel();
        urakkaKorvaava = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        uusiEtunimi = new javax.swing.JTextField();
        uusiSukunimi = new javax.swing.JTextField();
        uusiOsoite = new javax.swing.JTextField();
        uusiPuhelin = new javax.swing.JTextField();
        uusiSahkoposti = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        osoiteLabel = new javax.swing.JLabel();
        puhelinLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lisaaAsiakasOK = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        asiakasLista = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();
        etsittavaAsiakas = new javax.swing.JTextField();
        haeAsiakkaat = new javax.swing.JButton();
        kohteenTyyppi = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        kohteenOsoiteLabel = new javax.swing.JLabel();
        kohteenOsoite = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        erienLKM = new javax.swing.JComboBox<>();
        lisaaKohdeOK = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        onTarjous = new javax.swing.JCheckBox();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        etsittavaTarjous = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        haeTarjouksista = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tarjousLista = new javax.swing.JList<>();
        poistaTarjousStatus = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        etsittavaOsoite = new javax.swing.JTextField();
        haeKohdeOsoitteella = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        kohdeLista = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        tuntityyppi = new javax.swing.JComboBox<>();
        tuntimaara = new javax.swing.JTextField();
        lisaaTuntejaOK = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        etsittavaTarvike = new javax.swing.JTextField();
        haeTarvikeNimella = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tarvikeLista = new javax.swing.JList<>();
        jLabel13 = new javax.swing.JLabel();
        tarvikemaara = new javax.swing.JTextField();
        lisaaTarvikeOK = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        kohdeSisaltaaTunnit = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        kohdeSisaltaaTarvikkeet = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        poistaTuntirivit = new javax.swing.JButton();
        poistaTarvikerivit = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        paattyvaEtsittavaOsoite = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        paattyvaKohdeLista = new javax.swing.JList<>();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane7 = new javax.swing.JScrollPane();
        kohteenSisaltoTunnit = new javax.swing.JTable();
        haePaattyvaKohdeOsoite = new javax.swing.JButton();
        luoLaskuOK = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        kohteenSisaltoTarvikkeet = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();
        laskuYht = new javax.swing.JLabel();
        laskuLuontiIlmo = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        laskuTaulukko = new javax.swing.JTable();
        laskuDropDown = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        laskuMaksettu = new javax.swing.JButton();
        lahetaMuistutuslaskut = new javax.swing.JButton();
        laskuViestit = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane17 = new javax.swing.JScrollPane();
        tarvikeTaulukko = new javax.swing.JTable();
        tarvikeDropDown = new javax.swing.JComboBox<>();
        jLabel87 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        uusiTarvikeNimi = new javax.swing.JTextField();
        uusiYksikko = new javax.swing.JTextField();
        uusiOstohinta = new javax.swing.JTextField();
        uusiKate = new javax.swing.JTextField();
        uusiAlv = new javax.swing.JTextField();
        lisaaTarvike = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();

        popupok.setText("Ok");
        popupok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popupokActionPerformed(evt);
            }
        });

        yhteenvetoTunnit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nimike", "Tunnit", "ID", "Alennus %", "Hinta (Alv 0)", "Yhteensä €"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        yhteenvetoTunnit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                yhteenvetoTunnitPropertyChange(evt);
            }
        });
        jScrollPane12.setViewportView(yhteenvetoTunnit);
        if (yhteenvetoTunnit.getColumnModel().getColumnCount() > 0) {
            yhteenvetoTunnit.getColumnModel().getColumn(0).setMinWidth(80);
            yhteenvetoTunnit.getColumnModel().getColumn(1).setMinWidth(60);
            yhteenvetoTunnit.getColumnModel().getColumn(2).setMinWidth(0);
            yhteenvetoTunnit.getColumnModel().getColumn(2).setMaxWidth(0);
            yhteenvetoTunnit.getColumnModel().getColumn(3).setMinWidth(65);
            yhteenvetoTunnit.getColumnModel().getColumn(4).setMinWidth(65);
            yhteenvetoTunnit.getColumnModel().getColumn(5).setMinWidth(65);
        }

        yhteenvetoTarvikkeet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nimike", "Lukumäärä", "Yksikkö", "ID", "Alennus %", "Hinta (Alv 0)", "Yhteensä €"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        yhteenvetoTarvikkeet.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                yhteenvetoTarvikkeetPropertyChange(evt);
            }
        });
        jScrollPane11.setViewportView(yhteenvetoTarvikkeet);
        if (yhteenvetoTarvikkeet.getColumnModel().getColumnCount() > 0) {
            yhteenvetoTarvikkeet.getColumnModel().getColumn(0).setMinWidth(180);
            yhteenvetoTarvikkeet.getColumnModel().getColumn(1).setMinWidth(70);
            yhteenvetoTarvikkeet.getColumnModel().getColumn(2).setMinWidth(50);
            yhteenvetoTarvikkeet.getColumnModel().getColumn(3).setMinWidth(0);
            yhteenvetoTarvikkeet.getColumnModel().getColumn(3).setMaxWidth(0);
            yhteenvetoTarvikkeet.getColumnModel().getColumn(4).setMinWidth(65);
            yhteenvetoTarvikkeet.getColumnModel().getColumn(5).setMinWidth(70);
            yhteenvetoTarvikkeet.getColumnModel().getColumn(6).setMinWidth(65);
        }

        jLabel56.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel56.setText("Tunnit");

        jLabel57.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel57.setText("Tarvikkeet");

        jLabel88.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jLabel88.setText("Voit antaa rivialennuksen Tunnit- tai Tarvikkeet-taulun riville muokkaamalla");

        jLabel89.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jLabel89.setText("Alennus % -saraketta. Hyväksy muutokset painamalla Enter.");

        tarjousLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        tarjousLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tarjousLabel.setText("Tarjous");

        jLabel91.setText("Asiakkaan nimi:");

        jLabel92.setText("Työkohteen osoite:");

        tarjousKohdeosoite.setText(" ");

        tarjousAsiakas.setText(" ");

        jLabel93.setText("jLabel93");

        jLabel94.setText("jLabel94");

        jLabel95.setText("jLabel95");

        jLabel96.setText("jLabel96");

        jLabel97.setText("Yhteensä (sis. alv):");

        jLabel98.setText("Alv 0:");

        jLabel99.setText("Yhteensä (sis. alv):");

        jLabel100.setText("Alv 0:");

        jLabel90.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel90.setText("Maksuerien");

        jLabel101.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel101.setText("lukumäärä:");

        tarjousKohdeEralkm.setText(" ");

        javax.swing.GroupLayout tarjousIkkunaLayout = new javax.swing.GroupLayout(tarjousIkkuna.getContentPane());
        tarjousIkkuna.getContentPane().setLayout(tarjousIkkunaLayout);
        tarjousIkkunaLayout.setHorizontalGroup(
            tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tarjousIkkunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tarjousLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel89, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel88, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator8)
                    .addGroup(tarjousIkkunaLayout.createSequentialGroup()
                        .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel57)
                            .addComponent(jLabel56)
                            .addComponent(jLabel91, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel92, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tarjousAsiakas, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(tarjousKohdeosoite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel90, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                            .addComponent(jLabel101, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tarjousKohdeEralkm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tarjousIkkunaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(popupok, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tarjousIkkunaLayout.createSequentialGroup()
                                .addComponent(jLabel100)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel95, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel99)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel96, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tarjousIkkunaLayout.createSequentialGroup()
                                .addComponent(jLabel98)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel93, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel97)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel94, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        tarjousIkkunaLayout.setVerticalGroup(
            tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tarjousIkkunaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tarjousLabel)
                .addGap(24, 24, 24)
                .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel91)
                    .addComponent(tarjousAsiakas)
                    .addComponent(jLabel90))
                .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tarjousIkkunaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel92)
                            .addComponent(tarjousKohdeosoite)))
                    .addGroup(tarjousIkkunaLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel101)
                            .addComponent(tarjousKohdeEralkm))))
                .addGap(26, 26, 26)
                .addComponent(jLabel88)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel89)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator8, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel56)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel94)
                    .addComponent(jLabel97)
                    .addComponent(jLabel93)
                    .addComponent(jLabel98))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tarjousIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel95)
                    .addComponent(jLabel96)
                    .addComponent(jLabel99)
                    .addComponent(jLabel100))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(popupok)
                .addContainerGap())
        );

        laskuErittelyIkkuna.setResizable(false);

        jLabel31.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("Laskun erittely");

        laskuErittelyTunnit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nimike", "Tunnit", "Yksikköhinta", "Alennus %", "Yhteensä €", "Alv %", "Yhteensä (sis. alv) €"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane13.setViewportView(laskuErittelyTunnit);
        if (laskuErittelyTunnit.getColumnModel().getColumnCount() > 0) {
            laskuErittelyTunnit.getColumnModel().getColumn(0).setMinWidth(0);
            laskuErittelyTunnit.getColumnModel().getColumn(0).setMaxWidth(0);
            laskuErittelyTunnit.getColumnModel().getColumn(1).setMinWidth(70);
            laskuErittelyTunnit.getColumnModel().getColumn(2).setMinWidth(50);
            laskuErittelyTunnit.getColumnModel().getColumn(2).setMaxWidth(50);
            laskuErittelyTunnit.getColumnModel().getColumn(3).setMinWidth(75);
            laskuErittelyTunnit.getColumnModel().getColumn(4).setMinWidth(70);
            laskuErittelyTunnit.getColumnModel().getColumn(5).setMinWidth(70);
            laskuErittelyTunnit.getColumnModel().getColumn(6).setMinWidth(70);
            laskuErittelyTunnit.getColumnModel().getColumn(7).setMinWidth(120);
        }

        laskuErittelyTarvikkeet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nimike", "Lukumäärä", "Yksikkö", "Myyntihinta", "Alennus %", "Yhteensä €", "Alv %", "Yhteensä (sis. alv) €"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane14.setViewportView(laskuErittelyTarvikkeet);
        if (laskuErittelyTarvikkeet.getColumnModel().getColumnCount() > 0) {
            laskuErittelyTarvikkeet.getColumnModel().getColumn(0).setMinWidth(0);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(0).setMaxWidth(0);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(1).setMinWidth(80);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(2).setMinWidth(70);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(3).setMinWidth(60);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(3).setMaxWidth(60);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(4).setMinWidth(80);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(4).setHeaderValue("Myyntihinta");
            laskuErittelyTarvikkeet.getColumnModel().getColumn(5).setMinWidth(70);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(6).setMinWidth(70);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(6).setHeaderValue("Yhteensä €");
            laskuErittelyTarvikkeet.getColumnModel().getColumn(7).setMinWidth(60);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(8).setMinWidth(120);
            laskuErittelyTarvikkeet.getColumnModel().getColumn(8).setHeaderValue("Yhteensä (sis. alv) €");
        }

        laskuErittelyOk.setText("Ok");
        laskuErittelyOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laskuErittelyOkActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel32.setText("Tarvikeluettelo");

        jLabel33.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel33.setText("Tunnit");

        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel34.setText("Asiakkaan nimi:");

        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel35.setText("Laskun eräpäivä:");

        jLabel36.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel36.setText("Työkohteen tiedot");

        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel38.setText("Työsuorituksen tyyppi:");

        jLabel39.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel39.setText("Osoite");

        jLabel40.setText("Yhteissumma (sis. alv):");

        jLabel41.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel41.setText("Laskutustiedot");

        jLabel42.setText("Lasku luotu:");

        laskuLuontipvm.setText(" ");

        tyokohdeTyyppi.setText(" ");

        tyokohdeOsoite.setText(" ");

        laskuAsiakas.setText(" ");

        laskuErapvm.setText(" ");

        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel43.setText("Viivästyskorko:");

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel44.setText("Muistutusmaksu:");

        laskuPerintakulu.setText("0 €");

        laskuViivastyskorko.setText("0 %");

        laskuTotal.setText(" ");

        jLabel45.setText("Alv 0");

        jLabel46.setText("Alv");

        jLabel47.setText("Summa");

        jLabel48.setText("Työ");

        jLabel49.setText("Tarvike");

        jLabel50.setText("jLabel50");

        jLabel51.setText("jLabel51");

        jLabel52.setText("jLabel52");

        jLabel53.setText("jLabel53");

        jLabel54.setText("jLabel54");

        jLabel55.setText("jLabel55");

        maksueraTuntilaskuOtsikko.setText("Maksuerä:");

        laskuEralkm.setText(" ");

        laskunNumeroTuntilasku.setText(" ");

        tuntilaskuKorvaava.setText("jLabel104");

        javax.swing.GroupLayout laskuErittelyIkkunaLayout = new javax.swing.GroupLayout(laskuErittelyIkkuna.getContentPane());
        laskuErittelyIkkuna.getContentPane().setLayout(laskuErittelyIkkunaLayout);
        laskuErittelyIkkunaLayout.setHorizontalGroup(
            laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator4)
                            .addComponent(jScrollPane13)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laskuErittelyIkkunaLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laskuErittelyIkkunaLayout.createSequentialGroup()
                                        .addComponent(jLabel37)
                                        .addGap(768, 768, 768))
                                    .addComponent(laskuErittelyOk, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laskuErittelyIkkunaLayout.createSequentialGroup()
                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                        .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(220, 220, 220))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, laskuErittelyIkkunaLayout.createSequentialGroup()
                                        .addGap(90, 90, 90)
                                        .addComponent(jLabel41)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                        .addComponent(laskunNumeroTuntilasku, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel42)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(laskuLuontipvm, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laskuErittelyIkkunaLayout.createSequentialGroup()
                                        .addComponent(jLabel36)
                                        .addGap(188, 188, 188))))
                            .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                        .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(laskuAsiakas, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(laskuViivastyskorko, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(maksueraTuntilaskuOtsikko, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(laskuPerintakulu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                                    .addComponent(laskuEralkm, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(laskuErapvm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addGap(122, 122, 122)
                                        .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel39, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tyokohdeOsoite, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                                .addComponent(jLabel38, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tyokohdeTyyppi, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(jLabel33)
                                    .addComponent(jLabel32))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel49)
                                    .addComponent(jLabel48))
                                .addGap(18, 18, 18)
                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel50)
                                    .addComponent(jLabel45)
                                    .addComponent(jLabel53))
                                .addGap(26, 26, 26)
                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel46)
                                    .addComponent(jLabel51)
                                    .addComponent(jLabel54))
                                .addGap(22, 22, 22)
                                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel55)
                                    .addComponent(jLabel52)
                                    .addComponent(jLabel47)))
                            .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                                .addComponent(jLabel40)
                                .addGap(18, 18, 18)
                                .addComponent(laskuTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tuntilaskuKorvaava))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        laskuErittelyIkkunaLayout.setVerticalGroup(
            laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel31)
                    .addComponent(jLabel42)
                    .addComponent(laskuLuontipvm)
                    .addComponent(laskunNumeroTuntilasku))
                .addGap(28, 28, 28)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(laskuErittelyIkkunaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, laskuErittelyIkkunaLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(laskuAsiakas))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel35)
                        .addComponent(laskuErapvm))
                    .addComponent(tyokohdeOsoite))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maksueraTuntilaskuOtsikko)
                    .addComponent(laskuEralkm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(laskuPerintakulu)
                    .addComponent(jLabel38)
                    .addComponent(tyokohdeTyyppi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(laskuViivastyskorko))
                .addGap(18, 18, 18)
                .addComponent(jSeparator4, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane13, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47))
                .addGap(9, 9, 9)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(jLabel50)
                    .addComponent(jLabel51)
                    .addComponent(jLabel52))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(jLabel53)
                    .addComponent(jLabel54)
                    .addComponent(jLabel55))
                .addGap(18, 18, 18)
                .addComponent(tuntilaskuKorvaava)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(laskuErittelyOk)
                    .addGroup(laskuErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel40)
                        .addComponent(laskuTotal)))
                .addContainerGap())
        );

        urakkaErittelyIkkuna.setResizable(false);

        jLabel58.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel58.setText("Laskun erittely");

        urakkaLaskuTunnit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nimike", "Tunnit", "Alennus %", "Alv %"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane15.setViewportView(urakkaLaskuTunnit);
        if (urakkaLaskuTunnit.getColumnModel().getColumnCount() > 0) {
            urakkaLaskuTunnit.getColumnModel().getColumn(0).setMinWidth(0);
            urakkaLaskuTunnit.getColumnModel().getColumn(0).setMaxWidth(0);
            urakkaLaskuTunnit.getColumnModel().getColumn(1).setMinWidth(80);
            urakkaLaskuTunnit.getColumnModel().getColumn(2).setMinWidth(60);
            urakkaLaskuTunnit.getColumnModel().getColumn(3).setMinWidth(70);
            urakkaLaskuTunnit.getColumnModel().getColumn(4).setMinWidth(60);
        }

        urakkaLaskuTarvikkeet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nimike", "Lukumäärä", "Yksikkö", "Alennus %", "Alv %"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane16.setViewportView(urakkaLaskuTarvikkeet);
        if (urakkaLaskuTarvikkeet.getColumnModel().getColumnCount() > 0) {
            urakkaLaskuTarvikkeet.getColumnModel().getColumn(0).setMinWidth(0);
            urakkaLaskuTarvikkeet.getColumnModel().getColumn(0).setMaxWidth(0);
            urakkaLaskuTarvikkeet.getColumnModel().getColumn(1).setMinWidth(150);
            urakkaLaskuTarvikkeet.getColumnModel().getColumn(2).setMinWidth(70);
            urakkaLaskuTarvikkeet.getColumnModel().getColumn(3).setMinWidth(60);
            urakkaLaskuTarvikkeet.getColumnModel().getColumn(4).setMinWidth(70);
            urakkaLaskuTarvikkeet.getColumnModel().getColumn(5).setMinWidth(60);
        }

        jLabel59.setText("Lasku luotu:");

        jLabel60.setText("jLabel60");

        jLabel61.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel61.setText("Tunnit");

        jLabel62.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel62.setText("Tarvikeluettelo");

        jButton2.setText("Ok");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel63.setText("Yhteissumma (sis. alv):");

        jLabel64.setText("Alv 0:");

        jLabel65.setText("Alv:");

        jLabel66.setText("Summa:");

        jLabel67.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel67.setText("jLabel67");

        jLabel68.setText("jLabel68");

        jLabel69.setText("jLabel69");

        jLabel70.setText("Alv 0:");

        jLabel71.setText("jLabel71");

        jLabel72.setText("Alv:");

        jLabel73.setText("jLabel73");

        jLabel74.setText("Summa:");

        jLabel75.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel75.setText("jLabel75");

        jLabel76.setText("jLabel76");

        jLabel77.setText("Asiakkaan nimi:");

        jLabel78.setText("Laskun eräpäivä:");

        jLabel79.setText("Muistutusmaksu:");

        jLabel80.setText("Viivästyskorko:");

        jLabel81.setText("jLabel81");

        jLabel82.setText("jLabel82");

        jLabel83.setText("jLabel83");

        jLabel84.setText("jLabel84");

        jLabel85.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel85.setText("Työkohteen osoite");

        jLabel86.setText("jLabel86");

        urakkaLaskunumero.setText("jLabel102");

        jLabel102.setText("Työsuorituksen tyyppi: Urakka");

        jLabel103.setText("Maksuerä:");

        urakkaLaskuEralkm.setText("jLabel104");

        urakkaKorvaava.setText("jLabel104");

        javax.swing.GroupLayout urakkaErittelyIkkunaLayout = new javax.swing.GroupLayout(urakkaErittelyIkkuna.getContentPane());
        urakkaErittelyIkkuna.getContentPane().setLayout(urakkaErittelyIkkunaLayout);
        urakkaErittelyIkkunaLayout.setHorizontalGroup(
            urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, urakkaErittelyIkkunaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(urakkaLaskunumero, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel59)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel60, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                        .addComponent(jSeparator10)
                        .addGap(22, 22, 22))
                    .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel77, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel78, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel79, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel80, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel103, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(urakkaLaskuEralkm)
                            .addComponent(jLabel83, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                            .addComponent(jLabel81, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel82, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel84, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, urakkaErittelyIkkunaLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel102)
                                .addGap(50, 50, 50))
                            .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                                        .addComponent(jLabel85)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel86, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())))))
            .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                        .addComponent(urakkaKorvaava)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, urakkaErittelyIkkunaLayout.createSequentialGroup()
                        .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, urakkaErittelyIkkunaLayout.createSequentialGroup()
                                .addComponent(jLabel64)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel69, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(71, 71, 71)
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel68, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel66, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel67, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(21, 21, 21))
                    .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                        .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel62, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel61, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane16, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                                        .addComponent(jLabel63)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel76, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                                        .addComponent(jLabel70)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel71, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(73, 73, 73)
                                        .addComponent(jLabel72)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel73, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(79, 79, 79)
                                        .addComponent(jLabel74)))
                                .addGap(6, 6, Short.MAX_VALUE)
                                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel75, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(22, Short.MAX_VALUE))))
        );
        urakkaErittelyIkkunaLayout.setVerticalGroup(
            urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel58)
                    .addComponent(jLabel59)
                    .addComponent(jLabel60)
                    .addComponent(urakkaLaskunumero))
                .addGap(18, 18, 18)
                .addComponent(jSeparator10, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel77)
                    .addComponent(jLabel81)
                    .addComponent(jLabel85))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel78)
                    .addComponent(jLabel82)
                    .addComponent(jLabel86))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel102)
                    .addComponent(jLabel103)
                    .addComponent(urakkaLaskuEralkm))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel83)
                    .addComponent(jLabel79))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel80)
                    .addComponent(jLabel84))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel64)
                    .addComponent(jLabel65)
                    .addComponent(jLabel66)
                    .addComponent(jLabel68)
                    .addComponent(jLabel69)
                    .addComponent(jLabel67))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(urakkaErittelyIkkunaLayout.createSequentialGroup()
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel70)
                            .addComponent(jLabel71)
                            .addComponent(jLabel72)
                            .addComponent(jLabel73)
                            .addComponent(jLabel74)
                            .addComponent(jLabel75))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(urakkaKorvaava)
                        .addGap(11, 11, 11)
                        .addGroup(urakkaErittelyIkkunaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel63)
                            .addComponent(jLabel76))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, urakkaErittelyIkkunaLayout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(jButton2)
                        .addContainerGap())))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tmi Sähkötärsky");
        setForeground(java.awt.Color.white);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(799, 575));

        jLabel1.setText("Etunimi*");

        jLabel2.setText("Sukunimi*");

        osoiteLabel.setText("Osoite*");

        puhelinLabel.setText("Puhelin");

        jLabel5.setText("Sähköposti");

        lisaaAsiakasOK.setText("Lisää asiakas");
        lisaaAsiakasOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lisaaAsiakasOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(osoiteLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel5)
                        .addComponent(puhelinLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lisaaAsiakasOK)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(uusiEtunimi)
                        .addComponent(uusiSahkoposti, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                        .addComponent(uusiPuhelin)
                        .addComponent(uusiSukunimi)
                        .addComponent(uusiOsoite)))
                .addContainerGap(388, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uusiEtunimi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uusiSukunimi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uusiOsoite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(osoiteLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uusiPuhelin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(puhelinLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(uusiSahkoposti, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lisaaAsiakasOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(321, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Lisää asiakas", jPanel1);

        jScrollPane1.setViewportView(asiakasLista);

        jLabel3.setText("Asiakkaan nimi");

        haeAsiakkaat.setText("Hae");
        haeAsiakkaat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                haeAsiakkaatActionPerformed(evt);
            }
        });

        kohteenTyyppi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "urakka", "tunti" }));

        jLabel4.setText("Tyyppi");

        kohteenOsoiteLabel.setText("Osoite");

        jLabel7.setText("Maksuerien lukumäärä");

        erienLKM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2" }));

        lisaaKohdeOK.setText("Luo kohde");
        lisaaKohdeOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lisaaKohdeOKActionPerformed(evt);
            }
        });

        jLabel9.setText("Tarjous");

        onTarjous.setSelected(true);

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText(" ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel7)
                    .addComponent(kohteenOsoiteLabel)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(etsittavaAsiakas, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(haeAsiakkaat))
                                    .addComponent(kohteenTyyppi, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(163, 163, 163))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 491, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lisaaKohdeOK)
                                    .addComponent(jLabel26))
                                .addGap(88, 88, 88))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(kohteenOsoite)
                                        .addComponent(erienLKM, 0, 225, Short.MAX_VALUE))
                                    .addComponent(onTarjous)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(311, 311, 311)
                                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(etsittavaAsiakas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(haeAsiakkaat))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kohteenTyyppi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kohteenOsoiteLabel)
                    .addComponent(kohteenOsoite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(erienLKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(onTarjous))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lisaaKohdeOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addGap(18, 18, 18))
        );

        jTabbedPane1.addTab("Lisää työkohde", jPanel2);

        etsittavaTarjous.setToolTipText("");

        jLabel8.setText("Hae tarjouksista");

        haeTarjouksista.setText("Hae");
        haeTarjouksista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                haeTarjouksistaActionPerformed(evt);
            }
        });

        tarjousLista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                tarjousListaValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(tarjousLista);

        poistaTarjousStatus.setText("Tarjous hyväksytty");
        poistaTarjousStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poistaTarjousStatusActionPerformed(evt);
            }
        });

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText(" ");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .addComponent(etsittavaTarjous)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(haeTarjouksista))))
                            .addComponent(poistaTarjousStatus)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(273, 273, 273)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(291, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(etsittavaTarjous, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(haeTarjouksista))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(poistaTarjousStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addContainerGap(286, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Hallinnoi tarjouksia", jPanel7);

        jPanel3.setPreferredSize(new java.awt.Dimension(794, 520));

        jLabel10.setText("Kohteen osoite");

        haeKohdeOsoitteella.setText("Hae");
        haeKohdeOsoitteella.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                haeKohdeOsoitteellaActionPerformed(evt);
            }
        });

        kohdeLista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                kohdeListaValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(kohdeLista);

        jLabel11.setText("Lisää tunteja");

        tuntityyppi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "suunnittelu", "työ", "aputyö", "asennus" }));
        tuntityyppi.setToolTipText("");

        lisaaTuntejaOK.setText("Lisää");
        lisaaTuntejaOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lisaaTuntejaOKActionPerformed(evt);
            }
        });

        jLabel12.setText("Tarvikkeen nimi");

        haeTarvikeNimella.setText("Hae");
        haeTarvikeNimella.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                haeTarvikeNimellaActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(tarvikeLista);

        jLabel13.setText("Tarvikkeen määrä");

        lisaaTarvikeOK.setText("Lisää");
        lisaaTarvikeOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lisaaTarvikeOKActionPerformed(evt);
            }
        });

        kohdeSisaltaaTunnit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nimike", "Tunnit", "ID", "Alennus %"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(kohdeSisaltaaTunnit);
        if (kohdeSisaltaaTunnit.getColumnModel().getColumnCount() > 0) {
            kohdeSisaltaaTunnit.getColumnModel().getColumn(0).setMinWidth(130);
            kohdeSisaltaaTunnit.getColumnModel().getColumn(2).setMinWidth(0);
            kohdeSisaltaaTunnit.getColumnModel().getColumn(2).setMaxWidth(0);
            kohdeSisaltaaTunnit.getColumnModel().getColumn(3).setMinWidth(0);
            kohdeSisaltaaTunnit.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        jLabel14.setText("Tuntien määrä");

        kohdeSisaltaaTarvikkeet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nimike", "Määrä", "Yksikkö", "ID", "Alennus %"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(kohdeSisaltaaTarvikkeet);
        if (kohdeSisaltaaTarvikkeet.getColumnModel().getColumnCount() > 0) {
            kohdeSisaltaaTarvikkeet.getColumnModel().getColumn(0).setMinWidth(130);
            kohdeSisaltaaTarvikkeet.getColumnModel().getColumn(1).setMaxWidth(46);
            kohdeSisaltaaTarvikkeet.getColumnModel().getColumn(2).setMaxWidth(50);
            kohdeSisaltaaTarvikkeet.getColumnModel().getColumn(3).setMinWidth(0);
            kohdeSisaltaaTarvikkeet.getColumnModel().getColumn(3).setMaxWidth(0);
            kohdeSisaltaaTarvikkeet.getColumnModel().getColumn(4).setMinWidth(0);
            kohdeSisaltaaTarvikkeet.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        jLabel27.setText("Tunnit");

        jLabel28.setText("Tarvikkeet");

        poistaTuntirivit.setText("Poista valitut rivit");
        poistaTuntirivit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poistaTuntirivitActionPerformed(evt);
            }
        });

        poistaTarvikerivit.setText("Poista valitut rivit");
        poistaTarvikerivit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poistaTarvikerivitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(etsittavaTarvike, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(haeTarvikeNimella))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(tuntimaara)
                                        .addComponent(tuntityyppi, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE))
                                    .addComponent(etsittavaOsoite, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(haeKohdeOsoitteella)
                                    .addComponent(lisaaTuntejaOK)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(tarvikemaara, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lisaaTarvikeOK))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel27))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(poistaTuntirivit, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(poistaTarvikerivit, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(etsittavaOsoite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(haeKohdeOsoitteella))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tuntityyppi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(poistaTuntirivit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tuntimaara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lisaaTuntejaOK)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(etsittavaTarvike, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(haeTarvikeNimella))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tarvikemaara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(lisaaTarvikeOK))
                        .addGap(68, 68, 68))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poistaTarvikerivit)
                        .addGap(60, 60, 60))))
        );

        jTabbedPane1.addTab("Lisää veloituksia kohteeseen", jPanel3);

        jPanel4.setPreferredSize(new java.awt.Dimension(725, 573));

        jLabel15.setText("Kohteen osoite");

        paattyvaKohdeLista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                paattyvaKohdeListaValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(paattyvaKohdeLista);

        kohteenSisaltoTunnit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nimike", "Kappalehinta €", "Tunnit", "Alennus %", "Yhteensä €", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        kohteenSisaltoTunnit.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                kohteenSisaltoTunnitPropertyChange(evt);
            }
        });
        jScrollPane7.setViewportView(kohteenSisaltoTunnit);
        if (kohteenSisaltoTunnit.getColumnModel().getColumnCount() > 0) {
            kohteenSisaltoTunnit.getColumnModel().getColumn(5).setMinWidth(0);
            kohteenSisaltoTunnit.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        haePaattyvaKohdeOsoite.setText("Hae");
        haePaattyvaKohdeOsoite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                haePaattyvaKohdeOsoiteActionPerformed(evt);
            }
        });

        luoLaskuOK.setText("Päätä työ ja luo lasku");
        luoLaskuOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luoLaskuOKActionPerformed(evt);
            }
        });

        jLabel20.setText("Anna rivialennus muokkaamalla Alennus % -saraketta ja paina lopuksi Enter.");

        kohteenSisaltoTarvikkeet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tarvikkeen nimi", "Kappalehinta €", "Määrä", "Alennus %", "Yhteensä €", "ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        kohteenSisaltoTarvikkeet.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                kohteenSisaltoTarvikkeetPropertyChange(evt);
            }
        });
        jScrollPane9.setViewportView(kohteenSisaltoTarvikkeet);
        if (kohteenSisaltoTarvikkeet.getColumnModel().getColumnCount() > 0) {
            kohteenSisaltoTarvikkeet.getColumnModel().getColumn(5).setMinWidth(0);
            kohteenSisaltoTarvikkeet.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        jLabel16.setText("Yhteensä:");

        laskuYht.setText(" ");

        laskuLuontiIlmo.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane9)
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(laskuYht)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(luoLaskuOK))
                        .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(paattyvaEtsittavaOsoite, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(haePaattyvaKohdeOsoite)))
                        .addComponent(jScrollPane7))
                    .addComponent(laskuLuontiIlmo, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(181, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(paattyvaEtsittavaOsoite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(haePaattyvaKohdeOsoite))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(luoLaskuOK)
                    .addComponent(jLabel16)
                    .addComponent(laskuYht))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(laskuLuontiIlmo, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Päätä kohde ja laskuta", jPanel4);

        laskuTaulukko.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LaskuID", "Asiakas", "Kohde", "Luontipvm", "Eräpvm", "Maksupvm", "Tila"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        laskuTaulukko.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                laskuTaulukkoMouseClicked(evt);
            }
        });
        jScrollPane10.setViewportView(laskuTaulukko);
        if (laskuTaulukko.getColumnModel().getColumnCount() > 0) {
            laskuTaulukko.getColumnModel().getColumn(0).setMinWidth(50);
            laskuTaulukko.getColumnModel().getColumn(0).setMaxWidth(50);
            laskuTaulukko.getColumnModel().getColumn(1).setMinWidth(120);
            laskuTaulukko.getColumnModel().getColumn(1).setMaxWidth(180);
            laskuTaulukko.getColumnModel().getColumn(3).setMinWidth(88);
            laskuTaulukko.getColumnModel().getColumn(3).setMaxWidth(88);
            laskuTaulukko.getColumnModel().getColumn(4).setMinWidth(88);
            laskuTaulukko.getColumnModel().getColumn(4).setMaxWidth(88);
            laskuTaulukko.getColumnModel().getColumn(5).setMinWidth(88);
            laskuTaulukko.getColumnModel().getColumn(5).setMaxWidth(88);
            laskuTaulukko.getColumnModel().getColumn(6).setMinWidth(55);
            laskuTaulukko.getColumnModel().getColumn(6).setMaxWidth(55);
        }

        laskuDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Kaikki", "Eräpäivä umpeutunut", "Maksamatta", "Muistutus", "Karhu", "Maksetut" }));
        laskuDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laskuDropDownActionPerformed(evt);
            }
        });

        jLabel29.setText("Hae laskuista");

        laskuMaksettu.setText("Lasku maksettu");
        laskuMaksettu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                laskuMaksettuActionPerformed(evt);
            }
        });

        lahetaMuistutuslaskut.setText("Lähetä muistutuslaskut");
        lahetaMuistutuslaskut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lahetaMuistutuslaskutActionPerformed(evt);
            }
        });

        laskuViestit.setText(" ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 731, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(laskuDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(laskuMaksettu)
                        .addGap(18, 18, 18)
                        .addComponent(lahetaMuistutuslaskut))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(laskuViestit, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laskuDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(laskuMaksettu)
                    .addComponent(lahetaMuistutuslaskut))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(laskuViestit)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Laskujen hallinta", jPanel5);

        tarvikeTaulukko.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nimi", "Yksikkö", "Hinta", "Kate", "Alv", "Tila"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane17.setViewportView(tarvikeTaulukko);
        if (tarvikeTaulukko.getColumnModel().getColumnCount() > 0) {
            tarvikeTaulukko.getColumnModel().getColumn(0).setMinWidth(40);
            tarvikeTaulukko.getColumnModel().getColumn(0).setMaxWidth(40);
            tarvikeTaulukko.getColumnModel().getColumn(1).setMinWidth(120);
        }

        tarvikeDropDown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Kaikki", "Käytössä", "Poistettu" }));
        tarvikeDropDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tarvikeDropDownActionPerformed(evt);
            }
        });

        jLabel87.setText("Listaa tarvikkeet");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel87)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tarvikeDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tarvikeDropDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel87))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane17, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tarvikelistaus", jPanel6);

        jLabel17.setText("Nimi*");

        jLabel18.setText("Yksikkö*");

        jLabel19.setText("Ostohinta*");

        jLabel21.setText("Kate (%)");

        jLabel22.setText("Alv (%)");

        uusiKate.setText("40");

        uusiAlv.setText("24");

        lisaaTarvike.setText("Lisää tarvike");
        lisaaTarvike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lisaaTarvikeActionPerformed(evt);
            }
        });

        jButton1.setText("Selaa..");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel30.setText("Päivitä hinnasto");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(jButton1)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(uusiTarvikeNimi)
                                    .addComponent(uusiYksikko)
                                    .addComponent(uusiKate, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                    .addComponent(uusiAlv)
                                    .addComponent(uusiOstohinta))))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(lisaaTarvike, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(190, 190, 190))))
                .addContainerGap(457, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(uusiTarvikeNimi, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uusiYksikko, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(uusiOstohinta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(uusiKate, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uusiAlv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lisaaTarvike)
                .addGap(65, 65, 65)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(148, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Päivitä hinnasto / Lisää tarvike ", jPanel8);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lisaaAsiakasOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lisaaAsiakasOKActionPerformed
        // TODO add your handling code here:
        if (uusiEtunimi.getText().isBlank() || uusiSukunimi.getText().isBlank()
                || uusiOsoite.getText().isBlank()) {
            jLabel6.setText("Täytithän kaikki vaaditut kentät.");
        } else {
            if (!uusiPuhelin.getText().isBlank()) {
                try {
                    int pnumero = Integer.parseInt(uusiPuhelin.getText());
                    String pnro = "" + pnumero;
                    if (uusiPuhelin.getText().charAt(0) == '0') {
                        pnro = "0" + pnumero;
                    }
                    jLabel6.setText("");
                    try {
                        dbmanager.lisaaAsiakas(uusiEtunimi.getText(), uusiSukunimi.getText(),
                                uusiOsoite.getText(), pnro, uusiSahkoposti.getText());
                        jLabel6.setText("Asiakas lisätty onnistuneesti.");
                        uusiEtunimi.setText("");
                        uusiSukunimi.setText("");
                        uusiOsoite.setText("");
                        uusiPuhelin.setText("");
                        uusiSahkoposti.setText("");
                    } catch (SQLException e) {
                        System.out.println(e.getMessage());
                        jLabel6.setText("Asiakkaan lisäys epäonnistui.");
                    }

                } catch (Exception e) {
                    jLabel6.setText("Virheellinen puhelinnumero!");
                }
            } else {
                try {
                    dbmanager.lisaaAsiakas(uusiEtunimi.getText(), uusiSukunimi.getText(),
                            uusiOsoite.getText(), uusiSahkoposti.getText());
                    jLabel6.setText("Asiakas lisätty onnistuneesti.");
                    uusiEtunimi.setText("");
                    uusiSukunimi.setText("");
                    uusiOsoite.setText("");
                    uusiSahkoposti.setText("");
                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                    jLabel6.setText("Asiakkaan lisäys epäonnistui.");
                }
            }
        }
    }//GEN-LAST:event_lisaaAsiakasOKActionPerformed

    private void haeAsiakkaatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_haeAsiakkaatActionPerformed
        DefaultListModel dlmAsiakas = new DefaultListModel();

        if (!etsittavaAsiakas.getText().isBlank()) {
            String[] osat = etsittavaAsiakas.getText().split(" ");
            if (osat.length == 1) {
                String nimi = osat[0].toLowerCase();
                try {
                    ArrayList<String> asiakkaat = dbmanager.haeAsiakkaat(nimi);
                    for (String asiakas : asiakkaat) {
                        dlmAsiakas.addElement(asiakas);
                    }
                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                }
            } else if (osat.length == 2) {
                String enimi = osat[0].toLowerCase();
                String snimi = osat[1].toLowerCase();
                try {
                    ArrayList<String> asiakkaat = dbmanager.haeAsiakkaat(enimi, snimi);
                    for (String asiakas : asiakkaat) {
                        dlmAsiakas.addElement(asiakas);
                    }
                } catch (SQLException e) {
                    System.out.println(e.getMessage());
                }
            }
        } else {
            try {
                ArrayList<String> asiakkaat = dbmanager.haeAsiakkaat();
                for (String asiakas : asiakkaat) {
                    dlmAsiakas.addElement(asiakas);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }

        asiakasLista.setModel(dlmAsiakas);

    }//GEN-LAST:event_haeAsiakkaatActionPerformed

    private void lisaaKohdeOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lisaaKohdeOKActionPerformed
        // työkohteen luontilauseista puuttui tyypille vaihtoehto tarjous
        if (asiakasLista.getSelectedValue() == null
                || kohteenOsoite.getText().isBlank()
                || kohteenTyyppi.getSelectedItem().toString().isBlank()) {
            jLabel25.setText("Tarkista kentät!");

        } else {
            String asiakasid = asiakasLista.getSelectedValue().split(" ")[0];
            String tyyppi = kohteenTyyppi.getSelectedItem().toString();
            String osoite = kohteenOsoite.getText();
            String tarjous = Boolean.toString(onTarjous.isSelected());
            String eralkm = erienLKM.getSelectedItem().toString();
            try {
                dbmanager.lisaaKohde(asiakasid, tyyppi, tarjous, osoite, eralkm);
                jLabel25.setText("Työkohde lisätty onnistuneesti.");
                asiakasLista.setModel(new DefaultListModel());
                kohteenTyyppi.setSelectedIndex(0);
                kohteenOsoite.setText("");
                onTarjous.setSelected(false);
                erienLKM.setSelectedIndex(0);

            } catch (SQLException e) {
                System.out.println(e.getMessage());
                jLabel25.setText("Työkohteen lisäys epäonnistui.");
            }
        }

    }//GEN-LAST:event_lisaaKohdeOKActionPerformed

    private void poistaTarjousStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poistaTarjousStatusActionPerformed
        if (tarjousLista.getSelectedValue() == null) {
            jLabel24.setText("Valitse hyväksyttävä tarjous!");
        } else {
            try {
                String kohdeid = tarjousLista.getSelectedValue().split(" ")[0];
                dbmanager.hyvaksyTarjous(kohdeid);
                tarjousLista.setModel(new DefaultListModel());
                jLabel24.setText("Tarjous hyväksytty onnistuneesti.");
            } catch (SQLException e) {
                System.out.println(e.getMessage());
                jLabel24.setText("Tarjouksen hyväksyminen epäonnistui.");
            }
        }
    }//GEN-LAST:event_poistaTarjousStatusActionPerformed

    private void haeTarjouksistaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_haeTarjouksistaActionPerformed
        DefaultListModel dlmTarjous = new DefaultListModel();
        jLabel24.setText("");
        if (!etsittavaTarjous.getText().isBlank()) {
            String osoite = etsittavaTarjous.getText().toLowerCase();
            try {
                ArrayList<String> tarjoukset = dbmanager.haeTarjoukset(osoite);
                for (String tarjous : tarjoukset) {
                    dlmTarjous.addElement(tarjous);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        } else {
            try {
                ArrayList<String> tarjoukset = dbmanager.haeTarjoukset();
                for (String tarjous : tarjoukset) {
                    dlmTarjous.addElement(tarjous);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }

        }

        tarjousLista.setModel(dlmTarjous);
    }//GEN-LAST:event_haeTarjouksistaActionPerformed

    private void lisaaTarvikeOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lisaaTarvikeOKActionPerformed
        if (tarvikeLista.getSelectedValue() == null
                || tarvikemaara.getText().isBlank()) {
            System.out.println("vituix män");
        } else {
            try {
                int maara = Integer.parseInt(tarvikemaara.getText());
                String kohdeid = kohdeLista.getSelectedValue().split(" ")[0];
                String tarvikeid = tarvikeLista.getSelectedValue().split(" - ")[0];
                String lkm = "" + maara;
                dbmanager.lisaaKohteeseen(true, kohdeid, tarvikeid, lkm);
                tarvikemaara.setText("");
                tarvikeLista.setSelectedValue(null, false);

                paivitaKohdeSisaltaaTaulukko(kohdeid,
                        (DefaultTableModel) kohdeSisaltaaTunnit.getModel(),
                        (DefaultTableModel) kohdeSisaltaaTarvikkeet.getModel(),
                        null, null, null, null);
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } catch (Exception e) {
                System.out.println("vituix män ihan eri tavalla");
            }
        }
    }//GEN-LAST:event_lisaaTarvikeOKActionPerformed

    private void haeTarvikeNimellaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_haeTarvikeNimellaActionPerformed
        DefaultListModel dlmTarvike = new DefaultListModel();

        if (!etsittavaTarvike.getText().isBlank()) {
            String nimi = etsittavaTarvike.getText().toLowerCase();
            try {
                ArrayList<String> tarvikkeet = dbmanager.haeTarvikkeet(nimi);
                for (String tarvike : tarvikkeet) {
                    dlmTarvike.addElement(tarvike);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        } else {
            try {
                ArrayList<String> tarvikkeet = dbmanager.haeTarvikkeet();
                for (String tarvike : tarvikkeet) {
                    dlmTarvike.addElement(tarvike);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }

        tarvikeLista.setModel(dlmTarvike);
    }//GEN-LAST:event_haeTarvikeNimellaActionPerformed

    private void lisaaTuntejaOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lisaaTuntejaOKActionPerformed
        if (kohdeLista.getSelectedValue() == null
                || tuntityyppi.getSelectedItem().toString().isBlank()
                || tuntimaara.getText().isBlank()) {
            System.out.println("vituix män");
        } else {
            try {
                float tunnit = Float.parseFloat(tuntimaara.getText());
                String lkm = "" + tunnit;
                String kohdeid = kohdeLista.getSelectedValue().split(" ")[0];
                String nimi = tuntityyppi.getSelectedItem().toString();
                dbmanager.lisaaKohteeseen(false, kohdeid, nimi, lkm);
                tuntityyppi.setSelectedIndex(0);
                tuntimaara.setText("");

                kohdeSisaltaaTunnit.getModel();
                kohdeSisaltaaTarvikkeet.getModel();
                paivitaKohdeSisaltaaTaulukko(kohdeid,
                        (DefaultTableModel) kohdeSisaltaaTunnit.getModel(),
                        (DefaultTableModel) kohdeSisaltaaTarvikkeet.getModel(),
                        null, null, null, null);
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } catch (Exception e) {
                System.out.println("vituix män ihan eri tavalla");
            }
        }
    }//GEN-LAST:event_lisaaTuntejaOKActionPerformed

    private void kohdeListaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_kohdeListaValueChanged
        if (!evt.getValueIsAdjusting() && kohdeLista.getSelectedValue() != null) {
            paivitaKohdeSisaltaaTaulukko(kohdeLista.getSelectedValue().split(" ")[0],
                    (DefaultTableModel) kohdeSisaltaaTunnit.getModel(),
                    (DefaultTableModel) kohdeSisaltaaTarvikkeet.getModel(),
                    null, null, null, null);
        }
    }//GEN-LAST:event_kohdeListaValueChanged

    private void haeKohdeOsoitteellaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_haeKohdeOsoitteellaActionPerformed
        DefaultListModel dlmKohde = new DefaultListModel();
        DefaultTableModel tunnit = (DefaultTableModel) kohdeSisaltaaTunnit.getModel();
        DefaultTableModel tarvikkeet = (DefaultTableModel) kohdeSisaltaaTarvikkeet.getModel();
        tunnit.setRowCount(0);
        tarvikkeet.setRowCount(0);

        if (!etsittavaOsoite.getText().isBlank()) {
            String osoite = etsittavaOsoite.getText().toLowerCase();
            try {
                ArrayList<String> kohteet = dbmanager.haeKohteetIlmanLaskua(osoite);
                for (String kohde : kohteet) {
                    dlmKohde.addElement(kohde);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        } else {
            try {
                ArrayList<String> kohteet = dbmanager.haeKohteetIlmanLaskua();
                for (String kohde : kohteet) {
                    dlmKohde.addElement(kohde);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }
        kohdeLista.setModel(dlmKohde);
    }//GEN-LAST:event_haeKohdeOsoitteellaActionPerformed

    private void haePaattyvaKohdeOsoiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_haePaattyvaKohdeOsoiteActionPerformed
        DefaultListModel dlmPaattyvaKohde = new DefaultListModel();
        paivitaKohdeTaulukko("0");

        if (!paattyvaEtsittavaOsoite.getText().isBlank()) {
            String osoite = paattyvaEtsittavaOsoite.getText().toLowerCase();
            try {
                ArrayList<String> kohteet = dbmanager.haeKohteet(osoite);
                for (String kohde : kohteet) {
                    dlmPaattyvaKohde.addElement(kohde);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        } else {
            try {
                ArrayList<String> kohteet = dbmanager.haeKohteet();
                for (String kohde : kohteet) {
                    dlmPaattyvaKohde.addElement(kohde);
                }
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }

        paattyvaKohdeLista.setModel(dlmPaattyvaKohde);
    }//GEN-LAST:event_haePaattyvaKohdeOsoiteActionPerformed

    private void kohteenSisaltoTunnitPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kohteenSisaltoTunnitPropertyChange

        int col = kohteenSisaltoTunnit.getEditingColumn();
        int row = kohteenSisaltoTunnit.getEditingRow();

        if (row >= 0 && col >= 0) {
            try {
                System.out.println(kohteenSisaltoTunnit.getValueAt(row, 5));
                String ttid = kohteenSisaltoTunnit.getValueAt(row, 5).toString();
                String kohdeid = paattyvaKohdeLista.getSelectedValue().split(" - ")[0];
                // kokeillaan onko ale luku
                float ale = Float.parseFloat(kohteenSisaltoTunnit.getValueAt(
                        row, col).toString());
                dbmanager.lisaaTuntiAlennus(ttid, kohdeid, String.valueOf(ale));
                paivitaKohdeTaulukko(kohdeid);
            } catch (Exception e) {
                // jos ale ei ole luku asetetaan arvoksi 0
                kohteenSisaltoTunnit.setValueAt("0.0", row, col);
            }
        }

    }//GEN-LAST:event_kohteenSisaltoTunnitPropertyChange

    private void paattyvaKohdeListaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_paattyvaKohdeListaValueChanged
        if (!evt.getValueIsAdjusting() && paattyvaKohdeLista.getSelectedValue() != null) {
            String kohdeid = paattyvaKohdeLista.getSelectedValue().split(" - ")[0];
            paivitaKohdeTaulukko(kohdeid);
        }
    }//GEN-LAST:event_paattyvaKohdeListaValueChanged

    private void luoLaskuOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luoLaskuOKActionPerformed
        if (!paattyvaKohdeLista.isSelectionEmpty()) {
            try {
                String kohdeid = paattyvaKohdeLista.getSelectedValue().split(" - ")[0];
                int erat = dbmanager.haeErat(kohdeid);
                if(erat == 1 || erat == 2) {
                    dbmanager.luoLasku(kohdeid, erat);
                } else {
                    System.out.println("erälukumäärä virheellinen");
                }
                
                paattyvaKohdeLista.setModel(new DefaultListModel());
                laskuLuontiIlmo.setText("Laskun luonti onnistui.");
                paivitaKohdeTaulukko("0");
            } catch (Exception e) {
                System.out.println(e.getMessage());
                laskuLuontiIlmo.setText("Laskun luonti epäonnistui.");
            }
        } else {
            laskuLuontiIlmo.setText("Valitse laskutettava kohde.");
        }
    }//GEN-LAST:event_luoLaskuOKActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        dbmanager.close();
    }//GEN-LAST:event_formWindowClosing

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFileChooser fc = new JFileChooser();
        File workingDirectory = new File(System.getProperty("user.dir"));
        fc.setCurrentDirectory(workingDirectory);
        fc.setDialogTitle("Select a file");
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();

            dbmanager.update(file);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void lisaaTarvikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lisaaTarvikeActionPerformed
        if (uusiTarvikeNimi.getText().isBlank() || uusiYksikko.getText().isBlank() || uusiOstohinta.getText().isBlank()) {
            jLabel23.setText("Täytäs ny ne kaikki");
        } else {
            try {
                double ohinta = Double.parseDouble(uusiOstohinta.getText());
                double kate = Double.parseDouble(uusiKate.getText());
                double alv = Double.parseDouble(uusiAlv.getText());
                dbmanager.lisaaTarvike(uusiTarvikeNimi.getText(), uusiYksikko.getText(), ohinta, kate, alv);
                jLabel23.setText("Tarvikkeen lisäys onnistui.");
                uusiTarvikeNimi.setText("");
                uusiYksikko.setText("");
                uusiOstohinta.setText("");
            } catch (SQLException e) {
                System.out.println(e.getMessage());
                jLabel23.setText("Tarvikkeen lisäys epäonnistui.");
            } catch (NumberFormatException e) {
                System.out.println("Error! " + e.getMessage());
            }
        }
    }//GEN-LAST:event_lisaaTarvikeActionPerformed

    private void poistaTuntirivitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poistaTuntirivitActionPerformed
        DefaultTableModel dtmTunnit = (DefaultTableModel) kohdeSisaltaaTunnit.getModel();
        try {
            String kohdeid = kohdeLista.getSelectedValue().split(" ")[0];
            int rivit = kohdeSisaltaaTunnit.getSelectedRows().length;
            for (int i = 0; i < rivit; i++) {
                int rivi = kohdeSisaltaaTunnit.getSelectedRow();
                String ttid = kohdeSisaltaaTunnit.getValueAt(rivi, 2).toString().toLowerCase();
                dbmanager.poistaKohteestaTunteja(kohdeid, ttid);
                dtmTunnit.removeRow(rivi);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } catch (Exception ex) {
            // JOptionPane.showMessageDialog(null, ex);
            System.out.println("Epäonnistui");
        }
    }//GEN-LAST:event_poistaTuntirivitActionPerformed

    private void poistaTarvikerivitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poistaTarvikerivitActionPerformed
        DefaultTableModel dtmTarvikkeet = (DefaultTableModel) kohdeSisaltaaTarvikkeet.getModel();
        try {
            String kohdeid = kohdeLista.getSelectedValue().split(" ")[0];
            int rivit = kohdeSisaltaaTarvikkeet.getSelectedRows().length;
            for (int i = 0; i < rivit; i++) {
                int rivi = kohdeSisaltaaTarvikkeet.getSelectedRow();
                String tarvikeid = kohdeSisaltaaTarvikkeet.getValueAt(rivi, 3).toString();
                dbmanager.poistaKohteestaTarvikkeita(kohdeid, tarvikeid);
                dtmTarvikkeet.removeRow(rivi);
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } catch (Exception ex) {
            // JOptionPane.showMessageDialog(null, ex);
            System.out.println("Epäonnistui");
        }
    }//GEN-LAST:event_poistaTarvikerivitActionPerformed

    private void kohteenSisaltoTarvikkeetPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_kohteenSisaltoTarvikkeetPropertyChange
        int col = kohteenSisaltoTarvikkeet.getEditingColumn();
        int row = kohteenSisaltoTarvikkeet.getEditingRow();

        if (row >= 0 && col >= 0) {
            try {
                String tarvikeid = kohteenSisaltoTarvikkeet.getValueAt(row, 5).toString();
                // kokeillaan onko ale luku
                String kohdeid = paattyvaKohdeLista.getSelectedValue().split(" - ")[0];
                float ale = Float.parseFloat(kohteenSisaltoTarvikkeet.getValueAt(
                        row, col).toString());
                dbmanager.lisaaTarvikeAlennus(tarvikeid, kohdeid, String.valueOf(ale));
                paivitaKohdeTaulukko(kohdeid);
            } catch (Exception e) {
                // jos ale ei ole luku asetetaan arvoksi 0
                kohteenSisaltoTarvikkeet.setValueAt("0.0", row, col);
            }
        }
    }//GEN-LAST:event_kohteenSisaltoTarvikkeetPropertyChange

    /**
     * Laskun hallinta näkymän dropdown tapahtuma. Muuttaa listan näkymää
     * riippuen asetuksesta.
     *
     * @param evt
     */
    private void laskuDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laskuDropDownActionPerformed
        DefaultTableModel laskuSisalto = (DefaultTableModel) laskuTaulukko.getModel();
        laskuSisalto.setRowCount(0);
        ArrayList<String> laskut = new ArrayList<>();
        laskuViestit.setText("");
        try {
            if (laskuDropDown.getSelectedItem().toString().equals("Kaikki")) {
                laskut = dbmanager.haeKaikkiLaskut();
                laskuMaksettu.setEnabled(true);
                lahetaMuistutuslaskut.setEnabled(false);
            } else if (laskuDropDown.getSelectedItem().toString().equals("Eräpäivä umpeutunut")) {
                laskut = dbmanager.haeLaskutErapvmUmpeutunut();
                laskuMaksettu.setEnabled(true);
                lahetaMuistutuslaskut.setEnabled(true);
            } else if (laskuDropDown.getSelectedItem().toString().equals("Maksamatta")) {
                laskut = dbmanager.haeMaksamattomatLaskut();
                laskuMaksettu.setEnabled(true);
                lahetaMuistutuslaskut.setEnabled(false);
            } else if (laskuDropDown.getSelectedItem().toString().equals("Muistutus")) {
                laskut = dbmanager.haeMuistutuslaskut();
                laskuMaksettu.setEnabled(true);
                lahetaMuistutuslaskut.setEnabled(false);
            } else if (laskuDropDown.getSelectedItem().toString().equals("Karhu")) {
                laskut = dbmanager.haeKarhulaskut();
                laskuMaksettu.setEnabled(true);
                lahetaMuistutuslaskut.setEnabled(false);
            } else if (laskuDropDown.getSelectedItem().toString().equals("Maksetut")) {
                laskut = dbmanager.haeMaksetutLaskut();
                laskuMaksettu.setEnabled(false);
                lahetaMuistutuslaskut.setEnabled(false);
            } else {
                laskuMaksettu.setEnabled(false);
                lahetaMuistutuslaskut.setEnabled(false);
            }
            for (String lasku : laskut) {
                int laskuid = Integer.parseInt(lasku.split("::")[0]);
                String asiakas = lasku.split("::")[1];
                String kohde = lasku.split("::")[2];
                String luontipvm = lasku.split("::")[3];
                String erapvm = lasku.split("::")[4];
                String maksupvm = lasku.split("::")[5];
                if (maksupvm.equals("null")) {
                    maksupvm = "-";
                }
                String tila = lasku.split("::")[7];
                laskuSisalto.addRow(new Object[]{laskuid, asiakas, kohde, luontipvm, erapvm, maksupvm, tila});
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_laskuDropDownActionPerformed
    /**
     * Avaa pop up ikkunan, missä tarjouksen sisältö, kun kohde valitaan
     * listalta.
     *
     * @param evt
     */
    private void tarjousListaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_tarjousListaValueChanged
        if (!evt.getValueIsAdjusting() && tarjousLista.getSelectedValue() != null) {
            
            DefaultTableModel tunnit = (DefaultTableModel) yhteenvetoTunnit.getModel();
            DefaultTableModel tarvikkeet = (DefaultTableModel) yhteenvetoTarvikkeet.getModel();

            String id = tarjousLista.getSelectedValue().split(" ")[0];
            paivitaKohdeSisaltaaTaulukko(id,
                    (DefaultTableModel) yhteenvetoTunnit.getModel(),
                    (DefaultTableModel) yhteenvetoTarvikkeet.getModel(),
                    jLabel93, jLabel94, jLabel95, jLabel96);
            
            try {
                ArrayList<String> erittely = dbmanager.haeTarjousTiedot(id);
                String asiakas = erittely.get(0);
                String kohdeOsoite = erittely.get(1);
                String kohteenTyyppi = erittely.get(2);
                String eralkm = erittely.get(3);
                tarjousAsiakas.setText(asiakas);
                tarjousKohdeosoite.setText(kohdeOsoite);
                tarjousKohdeEralkm.setText(eralkm);
                if (kohteenTyyppi.equals("urakka")) {
                    tarjousLabel.setText("Urakkatarjous");
                } else if (kohteenTyyppi.equals("tunti")) {
                    tarjousLabel.setText("Tuntityötarjous");
                } else {
                    tarjousLabel.setText("Tarjous");
                }
            } catch (SQLException e) {
                System.out.println("Jotain meni vikaan?");
                tarjousAsiakas.setText("-");
                tarjousKohdeosoite.setText("-");
            }

            tarjousIkkuna.setVisible(true);
        }
    }//GEN-LAST:event_tarjousListaValueChanged

    private void popupokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popupokActionPerformed
        tarjousIkkuna.setVisible(false);
    }//GEN-LAST:event_popupokActionPerformed

    private void laskuMaksettuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laskuMaksettuActionPerformed
        DefaultTableModel dtmLaskut = (DefaultTableModel) laskuTaulukko.getModel();
        int valitutLaskut = laskuTaulukko.getSelectedRows().length;
        try {
            if (valitutLaskut <= 0) {
                laskuViestit.setText("Valitse vähintään yksi lasku hyväksyttäväksi!");
            } else {
                int maksetut = 0;
                int[] rivit = laskuTaulukko.getSelectedRows();
                for (int rivi : rivit) {
                    String laskuid = laskuTaulukko.getValueAt(rivi, 0).toString();
                    String updated = "";
                    if(laskuTaulukko.getValueAt(rivi, 6).toString().equals("kesken")){
                        updated = dbmanager.laskuMaksettu(laskuid);
                    
                        String maksupvm = updated.split("::")[0];
                        String tila = updated.split("::")[1];
                        dtmLaskut.setValueAt(maksupvm, rivi, 5);
                        dtmLaskut.setValueAt(tila, rivi, 6);
                        maksetut++;
                    }
                }
                
                String virhe = "";
                if(maksetut < valitutLaskut) {
                    virhe = ", " + (valitutLaskut - maksetut) + " epäonnistui.";
                }
                if (maksetut != 1) {
                    laskuViestit.setText(maksetut + " laskua merkitty maksetuiksi" + virhe);
                } else {
                    laskuViestit.setText("Yksi lasku merkitty maksetuksi" + virhe);
                }
            }

        } catch (SQLException e) {
            laskuViestit.setText("Laskun hyväksyminen epäonnistui...");
        }
    }//GEN-LAST:event_laskuMaksettuActionPerformed

    private void lahetaMuistutuslaskutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lahetaMuistutuslaskutActionPerformed
        DefaultTableModel dtmLaskut = (DefaultTableModel) laskuTaulukko.getModel();
        try {
            int rivit = laskuTaulukko.getRowCount();
            if (rivit == 0) {
                laskuViestit.setText("Myöhästyneitä laskuja ei ole.");
            } else {
                for (int i = 0; i < rivit; i++) {
                    String laskuid = laskuTaulukko.getValueAt(i, 0).toString();
                    dbmanager.lahetaMuistutuslasku(laskuid);
                    dtmLaskut.removeRow(i);
                }
                laskuViestit.setText("Muistutuslaskut lähetetty.");
            }

        } catch (Exception e) {
            laskuViestit.setText("Jotain meni vituiks");
        }
    }//GEN-LAST:event_lahetaMuistutuslaskutActionPerformed

    private void laskuTaulukkoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_laskuTaulukkoMouseClicked
        if (laskuTaulukko.getSelectedRows().length == 1) {
            try {
                int taulukonRivi = laskuTaulukko.getSelectedRow();
                String laskuid = laskuTaulukko.getValueAt(taulukonRivi, 0).toString();
                ArrayList<String> erittely = dbmanager.haeLaskuErittely(laskuid);

                String kohteenTyyppi = erittely.get(2);

                if (kohteenTyyppi.equals("urakka")) {
                    eritteleUrakkaLasku(erittely, laskuid);
                } else if (kohteenTyyppi.equals("tunti")) {
                    eritteleTuntiLasku(erittely, laskuid);
                }

            } catch (SQLException e) {
                System.out.println(e.getMessage());
            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        }
    }//GEN-LAST:event_laskuTaulukkoMouseClicked

    private void eritteleUrakkaLasku(ArrayList<String> erittely, String laskuid) {
        DefaultTableModel laskunTunnit = (DefaultTableModel) urakkaLaskuTunnit.getModel();
        DefaultTableModel laskunTarvikkeet = (DefaultTableModel) urakkaLaskuTarvikkeet.getModel();
        laskunTunnit.setRowCount(0);
        laskunTarvikkeet.setRowCount(0);
        try {
            String kohdeid = erittely.get(0);
            String asiakas = erittely.get(1);
            String kohteenOsoite = erittely.get(3);
            String luontipvm = erittely.get(4);
            String erapvm = erittely.get(5);
            double perintakulu = Double.parseDouble(erittely.get(6));
            double total = 0;
            double tunnitNollaAlv = 0;
            double tunnitAlv = 0;
            double tarvikkeetNollaAlv = 0;
            double tarvikkeetAlv = 0;

            ArrayList<String> tunnit = dbmanager.haeKohteenTunnit(kohdeid);

            for (String tt : tunnit) {
                String nimike = tt.split("::")[0];
                double lkm = Double.parseDouble(tt.split("::")[1]);
                double hinta = Double.parseDouble(tt.split("::")[2]);
                double ale = Double.parseDouble(tt.split("::")[3]);
                double valisumma = hinta * lkm * ((100 - ale) / 100);
                tunnitNollaAlv += valisumma;
                int ttid = Integer.parseInt(tt.split("::")[4]);
                double alv = Double.parseDouble(tt.split("::")[5]);
                double alvsumma = valisumma * ((100 + alv) / 100);
                tunnitAlv += valisumma * (alv / 100);
                nimike = nimike.substring(0, 1).toUpperCase() + nimike.substring(1);
                //total += alvsumma;
                laskunTunnit.addRow(new Object[]{
                    ttid,
                    nimike,
                    lkm,
                    ale > 0 ? ale : null,
                    alv
                });
            }
            ArrayList<String> tarvikkeet = dbmanager.haeKohteenTarvikkeet(kohdeid);
            for (String tarvike : tarvikkeet) {
                String nimike = tarvike.split("::")[0];
                String yksikko = tarvike.split("::")[1];
                int lkm = Integer.parseInt(tarvike.split("::")[2]);
                double hinta = Double.parseDouble(tarvike.split("::")[3]);
                double ale = Double.parseDouble(tarvike.split("::")[4]);
                double kate = Double.parseDouble(tarvike.split("::")[6]);
                double myyntihinta = hinta * ((100 + kate) / 100);
                double valisumma = myyntihinta * lkm * ((100 - ale) / 100);
                tarvikkeetNollaAlv += valisumma;
                int tarvikeid = Integer.parseInt(tarvike.split("::")[5]);
                double alv = Double.parseDouble(tarvike.split("::")[7]);
                double alvsumma = valisumma * ((100 + alv) / 100);
                tarvikkeetAlv += valisumma * (alv / 100);
                //total += alvsumma;
                laskunTarvikkeet.addRow(new Object[]{
                    tarvikeid,
                    nimike,
                    lkm,
                    yksikko,
                    ale > 0 ? ale : null,
                    alv
                });
            }

            jLabel81.setText(asiakas);
            jLabel82.setText(erapvm);
            jLabel60.setText(luontipvm);
            jLabel83.setText(perintakulu + " €");
            double viivastyskorko = 0;
            for (int i = 10; i <= perintakulu; i += 5) {
                viivastyskorko += 16;
            }
            jLabel84.setText(viivastyskorko + " %");
            jLabel86.setText(kohteenOsoite);
            urakkaLaskunumero.setText("Laskun numero: " + laskuid);
            if(perintakulu > 0) {
                urakkaLaskuEralkm.setText("1/1");
                urakkaKorvaava.setText("Tämä lasku korvaa laskun numero " 
                        + dbmanager.haeAiempi(laskuid));
            } else {
                urakkaKorvaava.setText("");
                urakkaLaskuEralkm.setText(dbmanager.haeEraluku(kohdeid, laskuid));
            }

            String tunnitTotal = df.format(tunnitNollaAlv + tunnitAlv);
            String tarvikkeetTotal = df.format(tarvikkeetNollaAlv + tarvikkeetAlv);

            jLabel69.setText("" + df.format(tunnitNollaAlv));
            jLabel68.setText("" + df.format(tunnitAlv));
            jLabel67.setText(tunnitTotal);

            jLabel71.setText("" + df.format(tarvikkeetNollaAlv));
            jLabel73.setText("" + df.format(tarvikkeetAlv));
            jLabel75.setText(tarvikkeetTotal);

            total += tunnitNollaAlv + tunnitAlv
                    + tarvikkeetNollaAlv + tarvikkeetAlv;

            total /= dbmanager.haeErat(kohdeid);
            
            total *= (100 + viivastyskorko) / 100;

            total += perintakulu; // perintäkulu lisätään viimeiseksi, koska sille ei tule korkoa
            jLabel76.setText("" + df.format(total));

            urakkaErittelyIkkuna.setVisible(true);

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } catch (Exception e) {
            System.out.println("Jotain meni pieleen?");
        }

    }

    private void eritteleTuntiLasku(ArrayList<String> erittely, String laskuid) {
        DefaultTableModel laskunTunnit = (DefaultTableModel) laskuErittelyTunnit.getModel();
        DefaultTableModel laskunTarvikkeet = (DefaultTableModel) laskuErittelyTarvikkeet.getModel();
        laskunTunnit.setRowCount(0);
        laskunTarvikkeet.setRowCount(0);
        try {
            String kohdeid = erittely.get(0);
            String asiakas = erittely.get(1);
            String kohteenOsoite = erittely.get(3);
            String luontipvm = erittely.get(4);
            String erapvm = erittely.get(5);
            double perintakulu = Double.parseDouble(erittely.get(6));
            double total = 0;
            double tunnitNollaAlv = 0;
            double tunnitAlv = 0;
            double tarvikkeetNollaAlv = 0;
            double tarvikkeetAlv = 0;

            ArrayList<String> tunnit = dbmanager.haeKohteenTunnit(kohdeid);

            for (String tt : tunnit) {
                String nimike = tt.split("::")[0];
                double lkm = Double.parseDouble(tt.split("::")[1]);
                double hinta = Double.parseDouble(tt.split("::")[2]);
                double ale = Double.parseDouble(tt.split("::")[3]);
                double valisumma = hinta * lkm * ((100 - ale) / 100);
                tunnitNollaAlv += valisumma;
                int ttid = Integer.parseInt(tt.split("::")[4]);
                double alv = Double.parseDouble(tt.split("::")[5]);
                double alvsumma = valisumma * ((100 + alv) / 100);
                tunnitAlv += valisumma * (alv / 100);
                nimike = nimike.substring(0, 1).toUpperCase() + nimike.substring(1);
                //total += alvsumma;
                laskunTunnit.addRow(new Object[]{
                    ttid,
                    nimike,
                    lkm,
                    hinta,
                    ale > 0 ? ale : null,
                    df.format(valisumma),
                    alv,
                    df.format(alvsumma)
                });
            }
            ArrayList<String> tarvikkeet = dbmanager.haeKohteenTarvikkeet(kohdeid);
            for (String tarvike : tarvikkeet) {
                String nimike = tarvike.split("::")[0];
                String yksikko = tarvike.split("::")[1];
                int lkm = Integer.parseInt(tarvike.split("::")[2]);
                double hinta = Double.parseDouble(tarvike.split("::")[3]);
                double ale = Double.parseDouble(tarvike.split("::")[4]);
                double kate = Double.parseDouble(tarvike.split("::")[6]);
                double myyntihinta = hinta * ((100 + kate) / 100);
                double valisumma = myyntihinta * lkm * ((100 - ale) / 100);
                tarvikkeetNollaAlv += valisumma;
                int tarvikeid = Integer.parseInt(tarvike.split("::")[5]);
                double alv = Double.parseDouble(tarvike.split("::")[7]);
                double alvsumma = valisumma * ((100 + alv) / 100);
                tarvikkeetAlv += valisumma * (alv / 100);
                //total += alvsumma;
                laskunTarvikkeet.addRow(new Object[]{
                    tarvikeid,
                    nimike,
                    lkm,
                    yksikko,
                    df.format(myyntihinta),
                    ale > 0 ? ale : null,
                    df.format(valisumma),
                    alv,
                    df.format(alvsumma)
                });
            }

            laskuAsiakas.setText(asiakas);
            laskuErapvm.setText(erapvm);
            laskuLuontipvm.setText(luontipvm);
            laskuPerintakulu.setText(perintakulu + " €");
            double viivastyskorko = 0;
            for (int i = 10; i <= perintakulu; i += 5) {
                viivastyskorko += 16;
            }
            laskuViivastyskorko.setText(viivastyskorko + " %");
            tyokohdeTyyppi.setText("Tuntityö");
            tyokohdeOsoite.setText(kohteenOsoite);
            laskunNumeroTuntilasku.setText("Laskun numero: " + laskuid);
            if(perintakulu > 0) {
                laskuEralkm.setText("1/1");
                tuntilaskuKorvaava.setText("Tämä lasku korvaa laskun numero "
                        + dbmanager.haeAiempi(laskuid));
            } else {
                tuntilaskuKorvaava.setText("");
                laskuEralkm.setText(dbmanager.haeEraluku(kohdeid, laskuid));
            }

            String tunnitTotal = df.format(tunnitNollaAlv + tunnitAlv);
            String tarvikkeetTotal = df.format(tarvikkeetNollaAlv + tarvikkeetAlv);

            jLabel50.setText("" + df.format(tunnitNollaAlv));
            jLabel51.setText("" + df.format(tunnitAlv));
            jLabel52.setText(tunnitTotal);

            jLabel53.setText("" + df.format(tarvikkeetNollaAlv));
            jLabel54.setText("" + df.format(tarvikkeetAlv));
            jLabel55.setText(tarvikkeetTotal);

            total += tunnitNollaAlv + tunnitAlv
                    + tarvikkeetNollaAlv + tarvikkeetAlv;

            total /= dbmanager.haeErat(kohdeid);
            
            total *= (100 + viivastyskorko) / 100;

            total += perintakulu; // perintäkulu lisätään viimeiseksi, koska sille ei tule korkoa
            laskuTotal.setText("" + df.format(total));

            laskuErittelyIkkuna.setVisible(true);

        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } catch (Exception e) {
            System.out.println("Jotain meni pieleen?");
        }
    }

    private void laskuErittelyOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_laskuErittelyOkActionPerformed
        laskuErittelyIkkuna.setVisible(false);
    }//GEN-LAST:event_laskuErittelyOkActionPerformed

    private void tarvikeDropDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tarvikeDropDownActionPerformed
        DefaultTableModel tarvikeSisalto = (DefaultTableModel) tarvikeTaulukko.getModel();
        tarvikeSisalto.setRowCount(0);

        ArrayList<String> tarvikkeet = new ArrayList<>();
        try {
            if (tarvikeDropDown.getSelectedItem().toString().equals("Kaikki")) {
                tarvikkeet = dbmanager.haeKaikkiTarvikkeet();
            } else if (tarvikeDropDown.getSelectedItem().toString().equals("Käytössä")) {
                tarvikkeet = dbmanager.haeKaytossaTarvikkeet();
            } else if (tarvikeDropDown.getSelectedItem().toString().equals("Poistettu")) {
                tarvikkeet = dbmanager.haePoistetutTarvikkeet();
            }
            for (String tarvike : tarvikkeet) {
                int id = Integer.parseInt(tarvike.split("::")[0]);
                String nimi = tarvike.split("::")[1];
                String yksikko = tarvike.split("::")[2];
                String hinta = tarvike.split("::")[3];
                String kate = tarvike.split("::")[4];
                String alv = tarvike.split("::")[5];
                String tila = tarvike.split("::")[6];
                tarvikeSisalto.addRow(new Object[]{id, nimi, yksikko, hinta, kate, alv, tila});
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }//GEN-LAST:event_tarvikeDropDownActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        urakkaErittelyIkkuna.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void yhteenvetoTarvikkeetPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_yhteenvetoTarvikkeetPropertyChange
        int col = yhteenvetoTarvikkeet.getEditingColumn();
        int row = yhteenvetoTarvikkeet.getEditingRow();

        if (row >= 0 && col >= 0) {
            try {
                String tarvikeid = yhteenvetoTarvikkeet.getValueAt(row, 3).toString();
                // kokeillaan onko ale luku
                String kohdeid = tarjousLista.getSelectedValue().split(" - ")[0];
                float ale = Float.parseFloat(yhteenvetoTarvikkeet.getValueAt(
                        row, col).toString());
                dbmanager.lisaaTarvikeAlennus(tarvikeid, kohdeid, String.valueOf(ale));
                paivitaKohdeSisaltaaTaulukko(kohdeid,
                        (DefaultTableModel) yhteenvetoTunnit.getModel(),
                        (DefaultTableModel) yhteenvetoTarvikkeet.getModel(),
                        jLabel93, jLabel94, jLabel95, jLabel96);
            } catch (Exception e) {
                // jos ale ei ole luku asetetaan arvoksi 0
                yhteenvetoTarvikkeet.setValueAt("0.0", row, col);
            }
        }
    }//GEN-LAST:event_yhteenvetoTarvikkeetPropertyChange

    private void yhteenvetoTunnitPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_yhteenvetoTunnitPropertyChange
        int col = yhteenvetoTunnit.getEditingColumn();
        int row = yhteenvetoTunnit.getEditingRow();

        if (row >= 0 && col >= 0) {
            try {
                String ttid = yhteenvetoTunnit.getValueAt(row, 2).toString();
                String kohdeid = tarjousLista.getSelectedValue().split(" - ")[0];
                // onko ale luku
                float ale = Float.parseFloat(yhteenvetoTunnit.getValueAt(
                        row, col).toString());
                dbmanager.lisaaTuntiAlennus(ttid, kohdeid, String.valueOf(ale));
                paivitaKohdeSisaltaaTaulukko(kohdeid,
                        (DefaultTableModel) yhteenvetoTunnit.getModel(),
                        (DefaultTableModel) yhteenvetoTarvikkeet.getModel(),
                        jLabel93, jLabel94, jLabel95, jLabel96);
            } catch (Exception e) {
                // jos ale ei ole luku asetetaan arvoksi 0
                yhteenvetoTunnit.setValueAt("0.0", row, col);
            }
        }
    }//GEN-LAST:event_yhteenvetoTunnitPropertyChange

    private void paivitaKohdeSisaltaaTaulukko(String id, DefaultTableModel tunnit,
            DefaultTableModel tarvikkeet, JLabel tunnitVeroton, JLabel tunnitVerollinen,
            JLabel tarvikkeetVeroton, JLabel tarvikkeetVerollinen) {

        tunnit.setRowCount(0);
        tarvikkeet.setRowCount(0);

        double sumTunnitVeroton = 0;
        double sumTunnitVerollinen = 0;
        double sumTarvikkeetVeroton = 0;
        double sumTarvikkeetVerollinen = 0;
        
        try {
            ArrayList<String> kohteenTunnit = dbmanager.haeKohteenTunnit(id);
            ArrayList<String> kohteenTarvikkeet = dbmanager.haeKohteenTarvikkeet(id);
            for (String tuntityyppi : kohteenTunnit) {
                String nimike = tuntityyppi.split("::")[0];
                double maara = Double.parseDouble(tuntityyppi.split("::")[1]);
                int ttid = Integer.parseInt(tuntityyppi.split("::")[4]);
                double ale = Double.parseDouble(tuntityyppi.split("::")[3]);
                double nollaAlv = maara*Double.parseDouble(tuntityyppi.split("::")[2])*(1-(ale/100));
                double alvillinen = nollaAlv * (1+(Double.parseDouble(tuntityyppi.split("::")[5])/100));
                sumTunnitVeroton += nollaAlv;
                sumTunnitVerollinen += alvillinen;
                nimike = nimike.substring(0, 1).toUpperCase() + nimike.substring(1);
                tunnit.addRow(new Object[]{nimike, maara, ttid, ale, df.format(nollaAlv), df.format(alvillinen)});
            }
            for (String tarvike : kohteenTarvikkeet) {
                String nimike = tarvike.split("::")[0];
                String yksikko = tarvike.split("::")[1];
                int maara = Integer.parseInt(tarvike.split("::")[2]);
                int tarvikeid = Integer.parseInt(tarvike.split("::")[5]);
                double ale = Double.parseDouble(tarvike.split("::")[4]);
                // määrä * ostohinta * ale * kate
                double nollaAlv = maara*Double.parseDouble(tarvike.split("::")[3])*
                        (1-(ale/100))*(1+(Double.parseDouble(tarvike.split("::")[6])/100));
                double alvillinen = nollaAlv * (1+(Double.parseDouble(tarvike.split("::")[7])/100));
                sumTarvikkeetVeroton += nollaAlv;
                sumTarvikkeetVerollinen += alvillinen;
                tarvikkeet.addRow(new Object[]{nimike, maara, yksikko, tarvikeid,
                    ale, df.format(nollaAlv), df.format(alvillinen)});
            }
            
            if(tunnitVeroton != null) tunnitVeroton.setText(df.format(sumTunnitVeroton));
            if(tunnitVerollinen != null) tunnitVerollinen.setText(df.format(sumTunnitVerollinen));
            if(tarvikkeetVeroton != null) tarvikkeetVeroton.setText(df.format(sumTarvikkeetVeroton));
            if(tarvikkeetVeroton != null) tarvikkeetVerollinen.setText(df.format(sumTarvikkeetVerollinen));
        } catch (SQLException e) {
            System.out.println("paivitakohdesisaltaataulukko 1 " + e.getMessage());
        } catch (Exception e) {
            System.out.println("paivitakohdesisaltaataulukko 2 " + e.getMessage());
        }
    }

    private void paivitaKohdeTaulukko(String id) {
        DefaultTableModel tunnitSisalto = (DefaultTableModel) kohteenSisaltoTunnit.getModel();
        DefaultTableModel tarvikkeetSisalto = (DefaultTableModel) kohteenSisaltoTarvikkeet.getModel();
        tunnitSisalto.setRowCount(0);
        tarvikkeetSisalto.setRowCount(0);
        laskuLuontiIlmo.setText("");
        double yhteensa = 0;

        try {
            ArrayList<String> kohteenTunnit = dbmanager.haeKohteenTunnit(id);
            for (String tuntityyppi : kohteenTunnit) {
                String nimike = tuntityyppi.split("::")[0];
                double maara = Double.parseDouble(tuntityyppi.split("::")[1]);
                double hinta = Double.parseDouble(tuntityyppi.split("::")[2]);
                double ale = Double.parseDouble(tuntityyppi.split("::")[3]);
                double summa = hinta * maara * ((100 - ale) / 100);
                int ttid = Integer.parseInt(tuntityyppi.split("::")[4]);
                nimike = nimike.substring(0, 1).toUpperCase() + nimike.substring(1);
                yhteensa += summa;
                tunnitSisalto.addRow(new Object[]{nimike, hinta, maara, ale, summa, ttid});
            }
            ArrayList<String> kohteenTarvikkeet = dbmanager.haeKohteenTarvikkeet(id);
            for (String tarvike : kohteenTarvikkeet) {
                String nimike = tarvike.split("::")[0];
                int maara = Integer.parseInt(tarvike.split("::")[2]);
                double hinta = Double.parseDouble(tarvike.split("::")[3]);
                double ale = Double.parseDouble(tarvike.split("::")[4]);
                double summa = hinta * maara * ((100 - ale) / 100);
                int tarvikeid = Integer.parseInt(tarvike.split("::")[5]);
                yhteensa += summa;
                tarvikkeetSisalto.addRow(new Object[]{nimike, hinta, maara, ale, summa, tarvikeid});
            }
            laskuYht.setText("" + df.format(yhteensa));
        } catch (SQLException e) {
            System.out.println("paivitakohdetaulukko " + e.getMessage());
        } catch (Exception e) {
            System.out.println("paivitakohdetaulukko " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> asiakasLista;
    private javax.swing.JComboBox<String> erienLKM;
    private javax.swing.JTextField etsittavaAsiakas;
    private javax.swing.JTextField etsittavaOsoite;
    private javax.swing.JTextField etsittavaTarjous;
    private javax.swing.JTextField etsittavaTarvike;
    private javax.swing.JButton haeAsiakkaat;
    private javax.swing.JButton haeKohdeOsoitteella;
    private javax.swing.JButton haePaattyvaKohdeOsoite;
    private javax.swing.JButton haeTarjouksista;
    private javax.swing.JButton haeTarvikeNimella;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane17;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator10;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList<String> kohdeLista;
    private javax.swing.JTable kohdeSisaltaaTarvikkeet;
    private javax.swing.JTable kohdeSisaltaaTunnit;
    private javax.swing.JTextField kohteenOsoite;
    private javax.swing.JLabel kohteenOsoiteLabel;
    private javax.swing.JTable kohteenSisaltoTarvikkeet;
    private javax.swing.JTable kohteenSisaltoTunnit;
    private javax.swing.JComboBox<String> kohteenTyyppi;
    private javax.swing.JButton lahetaMuistutuslaskut;
    private javax.swing.JLabel laskuAsiakas;
    private javax.swing.JComboBox<String> laskuDropDown;
    private javax.swing.JLabel laskuEralkm;
    private javax.swing.JLabel laskuErapvm;
    private javax.swing.JFrame laskuErittelyIkkuna;
    private javax.swing.JButton laskuErittelyOk;
    private javax.swing.JTable laskuErittelyTarvikkeet;
    private javax.swing.JTable laskuErittelyTunnit;
    private javax.swing.JLabel laskuLuontiIlmo;
    private javax.swing.JLabel laskuLuontipvm;
    private javax.swing.JButton laskuMaksettu;
    private javax.swing.JLabel laskuPerintakulu;
    private javax.swing.JTable laskuTaulukko;
    private javax.swing.JLabel laskuTotal;
    private javax.swing.JLabel laskuViestit;
    private javax.swing.JLabel laskuViivastyskorko;
    private javax.swing.JLabel laskuYht;
    private javax.swing.JLabel laskunNumeroTuntilasku;
    private javax.swing.JButton lisaaAsiakasOK;
    private javax.swing.JButton lisaaKohdeOK;
    private javax.swing.JButton lisaaTarvike;
    private javax.swing.JButton lisaaTarvikeOK;
    private javax.swing.JButton lisaaTuntejaOK;
    private javax.swing.JButton luoLaskuOK;
    private javax.swing.JLabel maksueraTuntilaskuOtsikko;
    private javax.swing.JCheckBox onTarjous;
    private javax.swing.JLabel osoiteLabel;
    private javax.swing.JTextField paattyvaEtsittavaOsoite;
    private javax.swing.JList<String> paattyvaKohdeLista;
    private javax.swing.JButton poistaTarjousStatus;
    private javax.swing.JButton poistaTarvikerivit;
    private javax.swing.JButton poistaTuntirivit;
    private javax.swing.JButton popupok;
    private javax.swing.JLabel puhelinLabel;
    private javax.swing.JLabel tarjousAsiakas;
    private javax.swing.JFrame tarjousIkkuna;
    private javax.swing.JLabel tarjousKohdeEralkm;
    private javax.swing.JLabel tarjousKohdeosoite;
    private javax.swing.JLabel tarjousLabel;
    private javax.swing.JList<String> tarjousLista;
    private javax.swing.JComboBox<String> tarvikeDropDown;
    private javax.swing.JList<String> tarvikeLista;
    private javax.swing.JTable tarvikeTaulukko;
    private javax.swing.JTextField tarvikemaara;
    private javax.swing.JLabel tuntilaskuKorvaava;
    private javax.swing.JTextField tuntimaara;
    private javax.swing.JComboBox<String> tuntityyppi;
    private javax.swing.JLabel tyokohdeOsoite;
    private javax.swing.JLabel tyokohdeTyyppi;
    private javax.swing.JFrame urakkaErittelyIkkuna;
    private javax.swing.JLabel urakkaKorvaava;
    private javax.swing.JLabel urakkaLaskuEralkm;
    private javax.swing.JTable urakkaLaskuTarvikkeet;
    private javax.swing.JTable urakkaLaskuTunnit;
    private javax.swing.JLabel urakkaLaskunumero;
    private javax.swing.JTextField uusiAlv;
    private javax.swing.JTextField uusiEtunimi;
    private javax.swing.JTextField uusiKate;
    private javax.swing.JTextField uusiOsoite;
    private javax.swing.JTextField uusiOstohinta;
    private javax.swing.JTextField uusiPuhelin;
    private javax.swing.JTextField uusiSahkoposti;
    private javax.swing.JTextField uusiSukunimi;
    private javax.swing.JTextField uusiTarvikeNimi;
    private javax.swing.JTextField uusiYksikko;
    private javax.swing.JTable yhteenvetoTarvikkeet;
    private javax.swing.JTable yhteenvetoTunnit;
    // End of variables declaration//GEN-END:variables
}
